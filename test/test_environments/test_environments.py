import json
import unittest

from science.environments.environments import Environment

TEST_PILOT_GAME_CONFIG = json.loads('{"frame_data": {"player": {"y": 38, "x": 38}, "objects": [{"y": 10, "x": 5, "cluster_id": 1, "value": 2}, {"y": 18, "x": 16, "cluster_id": 1, "value": 1}, {"y": 18, "x": 7, "cluster_id": 1, "value": 2}, {"y": 10, "x": 18, "cluster_id": 1, "value": -5}, {"y": 3, "x": 5, "cluster_id": 1, "value": -5}, {"y": 15, "x": 68, "color_value": 8, "cluster_id": 2, "value": 0}, {"y": 13, "x": 56, "color_value": -8, "cluster_id": 2, "value": 0}, {"y": 4, "x": 71, "cluster_id": 2, "value": 8}, {"y": 4, "x": 56, "cluster_id": 2, "value": -10}, {"y": 7, "x": 64, "cluster_id": 2, "value": 8}, {"y": 70, "x": 61, "cluster_id": 3, "value": 8}, {"y": 56, "x": 70, "cluster_id": 3, "value": 1}, {"y": 57, "x": 63, "cluster_id": 3, "value": 1}, {"y": 63, "x": 70, "cluster_id": 3, "value": -1}, {"y": 70, "x": 71, "cluster_id": 3, "value": -2}, {"y": 58, "x": 11, "cluster_id": 4, "value": 3}, {"y": 61, "x": 4, "cluster_id": 4, "value": 1}, {"y": 71, "x": 10, "color_value": -10, "cluster_id": 4, "value": 0}, {"y": 68, "x": 3, "cluster_id": 4, "value": -10}, {"y": 71, "x": 17, "cluster_id": 4, "value": -8}], "score": 0, "ms_elapsed": 0}, "game_metadata": {"name": "clusters_2.2", "max_cluster_value": 16, "cluster_configs": [{"num_objects": 5, "actual_negative_value": -10, "centroid": [11, 11], "id": 1, "actual_positive_value": 5}, {"num_objects": 5, "actual_negative_value": -10, "centroid": [64, 11], "id": 2, "actual_positive_value": 16}, {"num_objects": 5, "actual_negative_value": -3, "centroid": [64, 64], "id": 3, "actual_positive_value": 10}, {"num_objects": 5, "actual_negative_value": -18, "centroid": [11, 64], "id": 4, "actual_positive_value": 4}], "uuid": "d78729b2-f9bf-4d54-abcd-281f6fb56c15", "player_size": 4, "max_abs_value": 10, "object_padding": 7, "level_number": 1, "min_abs_value": 1, "object_size": 3, "level_duration_seconds": 8, "ratio_negative_to_zero": 0.7, "cluster_width": 20, "grid_size": 75}}')
TEST_SHAPE_MAG_FULL_GAME = json.loads('{"config_name": "clusters_2.2", "name": "full_game_record", "level": 1, "player_locations": [[0, 38, 38], [16.66266666666585, 38.125, 37.875], [33.32466666666538, 38.25, 37.75], [49.986666666666366, 38.375, 37.625], [66.64866666666735, 38.5, 37.5], [83.31066666666834, 38.625, 37.375], [99.97266666667079, 38.75, 37.25], [116.63466666667324, 38.875, 37.125], [133.297333333342, 39, 37.125], [149.95933333334446, 39.125, 37.125], [166.6213333333469, 39.25, 37.125], [183.2833333333479, 39.375, 37.125], [199.9453333333489, 39.5, 37.125], [216.6073333333499, 39.625, 37], [233.26933333334944, 39.75, 36.875], [249.93200000001528, 39.875, 36.75], [266.59400000001483, 40, 36.625], [283.25600000001293, 40.125, 36.5], [299.9186666666773, 40.25, 36.375], [316.5806666666754, 40.375, 36.25], [333.24266666667205, 40.5, 36.125], [349.9046666666687, 40.625, 36], [366.5686666666672, 40.75, 35.875], [383.2319999999979, 40.875, 35.75], [399.89533333332867, 41, 35.625], [416.56066666666123, 41.125, 35.5], [433.22533333332603, 41.25, 35.375], [449.88999999999083, 41.375, 35.25], [466.5546666666571, 41.5, 35.125], [483.22066666665603, 41.625, 35], [499.88666666665495, 41.75, 34.875], [516.5526666666553, 41.875, 34.75], [533.2186666666557, 42, 34.625], [549.8826666666557, 42.125, 34.5], [566.5466666666571, 42.25, 34.375], [583.2126666666575, 42.375, 34.25], [599.8766666666575, 42.5, 34.125], [616.5406666666588, 42.625, 34], [633.2046666666602, 42.75, 33.875], [649.8706666666606, 42.875, 33.75], [666.5346666666619, 43, 33.625], [683.1986666666633, 43.125, 33.5], [699.8646666666637, 43.25, 33.375], [716.530666666664, 43.375, 33.25], [733.1966666666644, 43.5, 33.125], [749.8626666666634, 43.625, 33], [766.5286666666638, 43.75, 32.875], [783.1946666666641, 43.875, 32.75], [799.8606666666631, 44, 32.625], [816.5286666666624, 44.125, 32.5], [833.1946666666628, 44.25, 32.375], [849.8606666666617, 44.375, 32.25], [866.5266666666606, 44.5, 32.125], [883.192666666661, 44.625, 32], [899.8586666666614, 44.75, 31.875], [916.5246666666618, 44.875, 31.75], [933.192666666664, 45, 31.625], [949.8586666666644, 45.125, 31.5], [966.5246666666648, 45.125, 31.375], [983.1926666666669, 45.125, 31.25], [999.8586666666673, 45.125, 31.125], [1016.5246666666677, 45.125, 31], [1033.1906666666696, 45.125, 30.875], [1049.8586666666704, 45.125, 30.75], [1066.5246666666708, 45.125, 30.625], [1083.1906666666712, 45.125, 30.5], [1099.8586666666704, 45.125, 30.375], [1116.5246666666692, 45.125, 30.25], [1133.1906666666696, 45.125, 30.125], [1149.85666666667, 45.125, 30], [1166.5226666666688, 45.125, 29.875], [1183.1886666666692, 45.125, 29.75], [1199.8546666666696, 45.125, 29.625], [1216.5226666666688, 45.125, 29.5], [1233.1886666666692, 45.125, 29.375], [1249.8546666666696, 45.125, 29.25], [1266.52066666667, 45.125, 29.125], [1283.1846666666713, 45.125, 29], [1299.8486666666727, 45.125, 28.875], [1316.5126666666727, 45.125, 28.75], [1333.178666666673, 45.125, 28.625], [1349.8426666666744, 45.125, 28.5], [1366.5066666666744, 45.125, 28.375], [1383.1726666666748, 45.125, 28.25], [1399.8366666666761, 45.125, 28.125], [1416.5006666666761, 45.125, 28], [1433.164666666676, 45.125, 27.875], [1449.828666666676, 45.125, 27.75], [1466.4926666666745, 45.125, 27.625], [1483.156666666673, 45.125, 27.5], [1499.8226666666733, 45.125, 27.375], [1516.4866666666717, 45.125, 27.25], [1533.15066666667, 45.125, 27.125], [1549.8166666666705, 45.125, 27], [1566.4806666666689, 45.125, 26.875], [1583.1446666666673, 45.125, 26.75], [1599.8086666666672, 45.125, 26.625], [1616.474666666666, 45.25, 26.5], [1633.1406666666649, 45.375, 26.375], [1649.8066666666653, 45.5, 26.25], [1666.4746666666645, 45.625, 26.125], [1683.1406666666633, 45.75, 26], [1699.8066666666637, 45.875, 25.875], [1716.472666666664, 46, 25.75], [1733.1386666666629, 46.125, 25.625], [1749.8046666666633, 46.25, 25.5], [1766.4706666666636, 46.375, 25.375], [1783.1386666666629, 46.375, 25.25], [1799.8046666666633, 46.375, 25.125], [1816.4706666666636, 46.375, 25], [1833.136666666664, 46.375, 24.875], [1849.8026666666644, 46.375, 24.75], [1866.4686666666648, 46.375, 24.625], [1883.1346666666652, 46.375, 24.5], [1899.8026666666644, 46.375, 24.375], [1916.4686666666648, 46.375, 24.25], [1933.1346666666652, 46.375, 24.125], [1949.8026666666644, 46.375, 24], [1966.4686666666648, 46.375, 23.875], [1983.1346666666652, 46.375, 23.75], [1999.8006666666656, 46.375, 23.625], [2016.4686666666664, 46.375, 23.5], [2033.1346666666682, 46.375, 23.375], [2049.8006666666683, 46.375, 23.25], [2066.468666666669, 46.375, 23.125], [2083.134666666671, 46.375, 23], [2099.800666666671, 46.375, 22.875], [2116.4666666666712, 46.375, 22.75], [2133.1326666666732, 46.375, 22.625], [2149.7986666666734, 46.375, 22.5], [2166.4646666666736, 46.375, 22.375], [2183.1306666666737, 46.375, 22.25], [2199.794666666672, 46.375, 22.125], [2216.4586666666705, 46.375, 22], [2233.1246666666707, 46.375, 21.875], [2249.788666666669, 46.375, 21.75], [2266.4526666666675, 46.375, 21.625], [2283.1166666666672, 46.375, 21.5], [2299.782666666666, 46.375, 21.375], [2316.4466666666644, 46.375, 21.25], [2333.110666666664, 46.5, 21.125], [2349.776666666663, 46.625, 21], [2366.442666666662, 46.75, 20.875], [2383.108666666662, 46.875, 20.75], [2399.774666666662, 47, 20.625], [2416.440666666661, 47.125, 20.5], [2433.106666666661, 47.25, 20.375], [2449.7726666666613, 47.375, 20.25], [2466.4406666666605, 47.5, 20.125], [2483.1066666666607, 47.625, 20], [2499.772666666661, 47.75, 19.875], [2516.4386666666596, 47.875, 19.75], [2533.10466666666, 48, 19.625], [2549.77066666666, 48.125, 19.5], [2566.4366666666588, 48.25, 19.375], [2583.104666666658, 48.375, 19.25], [2599.770666666658, 48.5, 19.125], [2616.436666666657, 48.625, 19], [2633.104666666656, 48.75, 18.875], [2649.7706666666563, 48.875, 18.75], [2666.436666666655, 49, 18.625], [2683.102666666654, 49.125, 18.5], [2699.7706666666545, 49.25, 18.375], [2716.3786666666533, 49.375, 18.25], [2732.986666666652, 49.5, 18.125], [2749.5966666666527, 49.5, 18], [2766.2046666666515, 49.5, 17.875], [2782.8126666666503, 49.5, 17.75], [2799.422666666651, 49.5, 17.625], [2816.0306666666497, 49.5, 17.5], [2832.6386666666485, 49.5, 17.375], [2849.2466666666487, 49.5, 17.25], [2865.856666666648, 49.625, 17.125], [2882.4646666666467, 49.75, 17], [2899.130666666647, 49.875, 16.875], [2915.796666666647, 50, 16.75], [2932.460666666647, 50.125, 16.625], [2949.1246666666484, 50.25, 16.5], [2965.7906666666486, 50.375, 16.375], [2982.4546666666483, 50.5, 16.25], [2999.11866666665, 50.625, 16.125], [3015.7826666666515, 50.75, 16], [3032.4486666666517, 50.875, 15.875], [3049.1126666666532, 51, 15.75], [3065.776666666655, 51.125, 15.625], [3082.442666666655, 51.25, 15.5], [3099.108666666655, 51.375, 15.375], [3115.7746666666553, 51.5, 15.25], [3132.440666666654, 51.625, 15.125], [3149.1066666666543, 51.75, 15], [3165.7726666666545, 51.875, 14.875], [3182.4386666666533, 52, 14.75], [3199.1066666666525, 52.125, 14.625], [3215.7726666666526, 52.25, 14.5], [3232.4386666666514, 52.375, 14.375], [3249.1046666666502, 52.5, 14.25], [3265.7706666666504, 52.625, 14.125], [3282.4366666666506, 52.75, 14], [3299.1026666666507, 52.875, 13.875], [3315.770666666653, 53, 13.75], [3332.4366666666533, 53.125, 13.625], [3349.1026666666535, 53.25, 13.5], [3365.770666666656, 53.375, 13.375], [3382.436666666656, 53.5, 13.25], [3399.102666666656, 53.625, 13.125], [3415.768666666658, 53.75, 13], [3432.4366666666588, 53.875, 12.875], [3449.102666666659, 54, 12.75], [3465.768666666659, 54.125, 12.625], [3482.4366666666583, 54.25, 12.5], [3499.102666666657, 54.375, 12.375], [3515.7686666666573, 54.5, 12.25], [3532.4346666666574, 54.625, 12.125], [3549.1006666666563, 54.75, 12], [3565.7666666666564, 54.875, 11.875], [3582.4326666666566, 55, 11.75], [3599.100666666656, 55.125, 11.625], [3615.766666666656, 55.25, 11.5], [3632.432666666656, 55.375, 11.375], [3649.0986666666563, 55.5, 11.25], [3665.762666666658, 55.625, 11.125], [3682.4266666666595, 55.75, 11], [3699.090666666661, 55.875, 10.875], [3715.756666666661, 56, 10.75], [3732.420666666663, 56.125, 10.625], [3749.0846666666644, 56.125, 10.5], [3765.7506666666645, 56.125, 10.375], [3782.414666666666, 56.125, 10.25], [3799.0786666666677, 56.125, 10.125], [3815.7426666666674, 56.125, 10], [3832.406666666667, 56.125, 9.875], [3849.070666666667, 56.125, 9.75], [3865.7346666666654, 56.125, 9.625], [3882.400666666664, 56.125, 9.5], [3899.064666666664, 56.125, 9.375], [3915.7286666666623, 56.125, 9.25], [3932.3926666666607, 56.125, 9.125], [3949.0566666666605, 56.125, 9], [3965.720666666659, 56.125, 8.875], [3982.3846666666573, 56.125, 8.75], [3999.0506666666574, 56.125, 8.625], [4015.7166666666576, 56.125, 8.5], [4032.3826666666578, 56.125, 8.375], [4049.05066666666, 56.125, 8.25], [4065.7166666666603, 56.125, 8.125], [4082.3826666666605, 56.125, 8], [4099.048666666662, 56.125, 7.875], [4115.716666666663, 56.125, 7.75], [4132.382666666663, 56.25, 7.625], [4149.048666666665, 56.375, 7.5], [4165.716666666665, 56.5, 7.375], [4182.3826666666655, 56.625, 7.25], [4199.048666666666, 56.75, 7.125], [4215.714666666666, 56.875, 7], [4232.380666666665, 57, 6.875], [4249.046666666665, 57.125, 6.75], [4265.712666666665, 57.25, 6.625], [4282.380666666665, 57.375, 6.5], [4299.046666666665, 57.5, 6.375], [4315.712666666665, 57.625, 6.25], [4332.380666666665, 57.75, 6.125], [4349.046666666665, 57.875, 6], [4365.712666666665, 58, 5.875], [4382.378666666666, 58.125, 5.75], [4399.046666666666, 58.25, 5.625], [4415.712666666668, 58.375, 5.5], [4432.378666666668, 58.5, 5.375], [4449.046666666669, 58.625, 5.25], [4465.712666666671, 58.75, 5.25], [4482.378666666671, 58.875, 5.25], [4499.044666666671, 59, 5.25], [4515.710666666673, 59.125, 5.25], [4532.376666666673, 59.25, 5.25], [4549.0426666666735, 59.375, 5.25], [4565.708666666674, 59.5, 5.25], [4582.372666666673, 59.625, 5.25], [4599.036666666671, 59.75, 5.25], [4615.702666666672, 59.875, 5.25], [4632.36666666667, 60, 5.25], [4649.030666666669, 60.125, 5.25], [4665.694666666669, 60.25, 5.25], [4682.360666666668, 60.375, 5.25], [4699.024666666667, 60.5, 5.25], [4715.688666666667, 60.625, 5.25], [4732.354666666666, 60.75, 5.25], [4749.020666666665, 60.875, 5.25], [4765.686666666666, 61, 5.25], [4782.352666666666, 61.125, 5.25], [4799.018666666665, 61.25, 5.25], [4815.684666666665, 61.375, 5.25], [4832.350666666665, 61.5, 5.25], [4849.018666666665, 61.625, 5.25], [4865.684666666665, 61.75, 5.25], [4882.350666666665, 61.875, 5.25], [4899.016666666665, 62, 5.25], [4915.682666666665, 62.125, 5.25], [4932.348666666665, 62.25, 5.25], [4949.014666666664, 62.375, 5.25], [4965.682666666664, 62.5, 5.25], [4982.348666666664, 62.625, 5.25], [4999.014666666663, 62.75, 5.25], [5015.682666666663, 62.875, 5.25], [5032.348666666663, 63, 5.25], [5049.014666666662, 63.125, 5.25], [5065.680666666662, 63.25, 5.25], [5082.348666666662, 63.375, 5.25], [5099.0146666666615, 63.5, 5.25], [5115.680666666661, 63.625, 5.25], [5132.348666666661, 63.75, 5.25], [5149.014666666661, 63.875, 5.25], [5165.68066666666, 64, 5.25], [5182.34666666666, 64.125, 5.25], [5199.012666666659, 64.25, 5.25], [5215.6786666666585, 64.375, 5.25], [5232.344666666659, 64.5, 5.25], [5249.012666666658, 64.625, 5.25], [5265.678666666658, 64.75, 5.25], [5282.344666666658, 64.875, 5.25], [5299.010666666658, 65, 5.25], [5315.674666666658, 65.125, 5.25], [5332.338666666659, 65.25, 5.25], [5349.002666666661, 65.375, 5.25], [5365.668666666661, 65.5, 5.25], [5382.332666666663, 65.625, 5.25], [5398.996666666664, 65.75, 5.25], [5415.662666666664, 65.875, 5.25], [5432.326666666666, 66, 5.25], [5448.9906666666675, 66.125, 5.25], [5465.654666666667, 66.25, 5.25], [5482.318666666667, 66.375, 5.25], [5498.982666666667, 66.5, 5.375], [5515.646666666666, 66.625, 5.5], [5532.312666666665, 66.75, 5.625], [5548.976666666665, 66.875, 5.75], [5565.6406666666635, 67, 5.875], [5582.304666666662, 67.125, 6], [5598.968666666662, 67.25, 6.125], [5615.632666666661, 67.375, 6.25], [5632.29666666666, 67.5, 6.375], [5648.96266666666, 67.625, 6.5], [5665.62866666666, 67.75, 6.625], [5682.29466666666, 67.75, 6.75], [5698.962666666663, 67.75, 6.875], [5715.628666666663, 67.75, 7], [5732.294666666663, 67.75, 7.125], [5748.960666666665, 67.75, 7.25], [5765.628666666666, 67.75, 7.375], [5782.294666666666, 67.75, 7.5], [5798.960666666668, 67.75, 7.625], [5815.628666666668, 67.75, 7.75], [5832.2946666666685, 67.75, 7.875], [5848.960666666669, 67.75, 8], [5865.626666666669, 67.75, 8.125], [5882.292666666668, 67.75, 8.25], [5898.958666666668, 67.75, 8.375], [5915.624666666668, 67.875, 8.5], [5932.292666666668, 68, 8.625], [5948.958666666668, 68.125, 8.75], [5965.624666666668, 68.25, 8.875], [5982.292666666668, 68.375, 9], [5998.958666666668, 68.375, 9.125], [6015.624666666668, 68.375, 9.25], [6032.290666666669, 68.375, 9.375], [6048.958666666669, 68.375, 9.5], [6065.624666666671, 68.375, 9.625], [6082.290666666671, 68.375, 9.75], [6098.958666666672, 68.375, 9.875], [6115.624666666674, 68.375, 10], [6132.290666666674, 68.375, 10.125], [6148.956666666674, 68.375, 10.25], [6165.622666666676, 68.375, 10.375], [6182.288666666676, 68.375, 10.5], [6198.9546666666765, 68.375, 10.625], [6215.620666666677, 68.375, 10.75], [6232.284666666676, 68.375, 10.875], [6248.948666666674, 68.375, 11], [6265.612666666674, 68.375, 11.125], [6282.276666666673, 68.375, 11.25], [6298.940666666672, 68.375, 11.375], [6315.604666666672, 68.375, 11.5], [6332.270666666671, 68.375, 11.625], [6348.93466666667, 68.25, 11.75], [6365.5986666666695, 68.125, 11.875], [6382.264666666669, 68, 12], [6398.930666666668, 67.875, 12.125], [6415.596666666668, 67.75, 12.25], [6432.262666666668, 67.625, 12.375], [6448.930666666668, 67.5, 12.5], [6465.596666666668, 67.375, 12.625], [6482.262666666668, 67.25, 12.75], [6498.930666666668, 67.125, 12.875], [6515.596666666668, 67, 13], [6532.262666666668, 66.875, 13.125], [6548.928666666668, 66.75, 13.25], [6565.594666666668, 66.625, 13.375], [6582.260666666668, 66.5, 13.5], [6598.926666666667, 66.375, 13.625], [6615.594666666667, 66.25, 13.75], [6632.260666666667, 66.125, 13.875], [6648.926666666666, 66, 14], [6665.594666666666, 65.875, 14.125], [6682.260666666666, 65.75, 14.25], [6698.926666666665, 65.625, 14.375], [6715.592666666665, 65.5, 14.5], [6732.260666666665, 65.375, 14.625], [6748.9266666666645, 65.25, 14.75], [6765.592666666664, 65.125, 14.875], [6782.260666666664, 65, 15], [6798.926666666664, 64.875, 15.125], [6815.592666666663, 64.75, 15.25], [6832.258666666663, 64.625, 15.375], [6848.924666666662, 64.5, 15.5], [6865.5906666666615, 64.375, 15.625], [6882.256666666662, 64.25, 15.75], [6898.924666666661, 64.125, 15.875], [6915.590666666661, 64, 16], [6932.256666666661, 64, 16.125], [6948.922666666661, 64, 16.25], [6965.586666666661, 64, 16.375], [6982.250666666662, 64, 16.5], [6998.914666666664, 64, 16.625], [7015.580666666664, 64, 16.75], [7032.244666666666, 64, 16.875], [7048.908666666667, 64, 17], [7065.574666666667, 64, 17.125], [7082.238666666669, 64, 17.25], [7098.9026666666705, 64, 17.375], [7115.566666666672, 64, 17.5], [7132.230666666674, 64, 17.625], [7148.894666666675, 64, 17.75], [7165.558666666677, 64, 17.875], [7182.224666666677, 64, 18], [7198.888666666679, 64, 18.125], [7215.55266666668, 64, 18.25], [7232.21666666668, 64, 18.375], [7248.8806666666815, 64, 18.5], [7265.544666666683, 64, 18.625], [7282.208666666683, 64, 18.75], [7298.874666666683, 64, 18.875], [7315.540666666683, 64, 19], [7332.206666666682, 64, 19.125], [7348.874666666682, 64, 19.25], [7365.540666666682, 64, 19.375], [7382.2066666666815, 64, 19.5], [7398.872666666681, 64, 19.625], [7415.540666666681, 64, 19.75], [7432.206666666681, 64, 19.875], [7448.87266666668, 64, 20], [7465.54066666668, 64, 20.125], [7482.20666666668, 64, 20.25], [7498.872666666679, 64, 20.375], [7515.538666666679, 64, 20.5], [7532.204666666678, 64, 20.625], [7548.870666666678, 64, 20.75], [7565.536666666678, 64, 20.875], [7582.204666666677, 64, 21], [7598.870666666677, 64, 21.125], [7615.536666666677, 64, 21.25], [7632.2046666666765, 64, 21.375], [7648.870666666676, 64, 21.5], [7665.536666666676, 64, 21.625], [7682.202666666676, 64, 21.75], [7698.870666666676, 64, 21.875], [7715.536666666676, 64, 22], [7732.202666666676, 64, 22.125], [7748.870666666676, 64, 22.25], [7765.536666666676, 64, 22.375], [7782.202666666676, 64, 22.5], [7798.868666666675, 64, 22.625], [7815.534666666676, 64, 22.75], [7832.200666666676, 64, 22.875], [7848.866666666675, 64, 23], [7865.532666666674, 64, 23.125], [7882.196666666674, 64, 23.25], [7898.860666666673, 64, 23.375], [7915.524666666672, 64, 23.5], [7932.188666666671, 64, 23.625], [7948.85266666667, 64, 23.75], [7965.516666666669, 64, 23.875], [7982.182666666669, 64, 24], [7998.846666666668, 64, 24.125]], "game_events": [{"data": {"object": {"y": 13, "x": 56, "color_value": -8, "cluster_id": 2, "value": 0}, "score": 0}, "name": "object_collected", "ms_elapsed": 3265.7706666666504}, {"data": {"object": {"y": 4, "x": 56, "cluster_id": 2, "value": -10}, "score": -10}, "name": "object_collected", "ms_elapsed": 4165.716666666665}, {"data": {"object": {"y": 7, "x": 64, "cluster_id": 2, "value": 8}, "score": -2}, "name": "object_collected", "ms_elapsed": 4715.688666666667}, {"data": {"object": {"y": 4, "x": 71, "cluster_id": 2, "value": 8}, "score": 6}, "name": "object_collected", "ms_elapsed": 5648.96266666666}, {"data": {"object": {"y": 15, "x": 68, "color_value": 8, "cluster_id": 2, "value": 0}, "score": 6}, "name": "object_collected", "ms_elapsed": 6332.270666666671}], "task_uuid": "A18T7E73TNGOKP:39ZSFO5CAAKV51CXMAXEYC1TFGLUJ9", "score": 6, "mode": "normal", "value_mask_config": {"shape_config": "^_s_o", "communication": "singleplayer", "learner_uuid": "A18T7E73TNGOKP:39ZSFO5CAAKV51CXMAXEYC1TFGLUJ9", "color_config": "m_c_y", "pair_uuid": "", "event": "pairing_configuration"}, "phase": "gameplay", "config": {"frame_data": {"player": {"y": 38, "x": 38}, "objects": [{"y": 10, "x": 5, "cluster_id": 1, "value": 2}, {"y": 18, "x": 16, "cluster_id": 1, "value": 1}, {"y": 18, "x": 7, "cluster_id": 1, "value": 2}, {"y": 10, "x": 18, "cluster_id": 1, "value": -5}, {"y": 3, "x": 5, "cluster_id": 1, "value": -5}, {"y": 15, "x": 68, "color_value": 8, "cluster_id": 2, "value": 0}, {"y": 13, "x": 56, "color_value": -8, "cluster_id": 2, "value": 0}, {"y": 4, "x": 71, "cluster_id": 2, "value": 8}, {"y": 4, "x": 56, "cluster_id": 2, "value": -10}, {"y": 7, "x": 64, "cluster_id": 2, "value": 8}, {"y": 70, "x": 61, "cluster_id": 3, "value": 8}, {"y": 56, "x": 70, "cluster_id": 3, "value": 1}, {"y": 57, "x": 63, "cluster_id": 3, "value": 1}, {"y": 63, "x": 70, "cluster_id": 3, "value": -1}, {"y": 70, "x": 71, "cluster_id": 3, "value": -2}, {"y": 58, "x": 11, "cluster_id": 4, "value": 3}, {"y": 61, "x": 4, "cluster_id": 4, "value": 1}, {"y": 71, "x": 10, "color_value": -10, "cluster_id": 4, "value": 0}, {"y": 68, "x": 3, "cluster_id": 4, "value": -10}, {"y": 71, "x": 17, "cluster_id": 4, "value": -8}], "score": 0, "ms_elapsed": 0}, "game_metadata": {"name": "clusters_2.2", "max_cluster_value": 16, "cluster_configs": [{"num_objects": 5, "actual_negative_value": -10, "centroid": [11, 11], "id": 1, "actual_positive_value": 5}, {"num_objects": 5, "actual_negative_value": -10, "centroid": [64, 11], "id": 2, "actual_positive_value": 16}, {"num_objects": 5, "actual_negative_value": -3, "centroid": [64, 64], "id": 3, "actual_positive_value": 10}, {"num_objects": 5, "actual_negative_value": -18, "centroid": [11, 64], "id": 4, "actual_positive_value": 4}], "uuid": "d78729b2-f9bf-4d54-abcd-281f6fb56c15", "player_size": 4, "max_abs_value": 10, "object_padding": 7, "level_number": 1, "min_abs_value": 1, "object_size": 3, "level_duration_seconds": 8, "ratio_negative_to_zero": 0.7, "cluster_width": 20, "grid_size": 75}}, "event": "level_end", "task_configuration": {"shape_config": "^_s_o", "communication": "singleplayer", "learner_uuid": "A18T7E73TNGOKP:39ZSFO5CAAKV51CXMAXEYC1TFGLUJ9", "color_config": "m_c_y", "pair_uuid": "", "event": "pairing_configuration"}, "level_max_score": 16, "psiturk_log_uuid": "A18T7E73TNGOKP:39ZSFO5CAAKV51CXMAXEYC1TFGLUJ9", "ts": "1589511006867"}')


class MyTestCase(unittest.TestCase):

    def test_pilot_environment_creation(self):

        environment = Environment.from_pilot_config(TEST_PILOT_GAME_CONFIG)

        expected_columns = ['y', 'x', 'cluster_id', 'reward', 'circle', 'blue', 'blue|circle', 'square',
                             'white', 'white|square', 'triangle', 'pink', 'pink|triangle', 'yellow', 'yellow|triangle',
                             'pink|circle', 'yellow|square', 'blue|square', 'yellow|circle', 'blue|triangle',
                             'pink|square', 'white|circle', 'white|triangle']

        self.assertSetEqual(set(expected_columns), set(list(environment.object_df.columns.values)))
        self.assertEqual(20, len(environment.object_df))
        self.assertEqual(1, environment.level_number)

    def test_shape_magnitude_environment_creation(self):

        environment = Environment.from_shape_magnitude_game_record(TEST_SHAPE_MAG_FULL_GAME)

        expected_columns = ['y', 'x', 'cluster_id', 'reward', 'yellow', 'triangle', 'yellow|triangle', 'pink',
                            'square', 'pink|square', 'blue', 'circle', 'blue|circle', 'yellow|circle', 'pink|circle',
                            'pink|triangle', 'yellow|square', 'blue|square', 'blue|triangle']

        self.assertSetEqual(set(expected_columns), set(list(environment.object_df.columns.values)))
        self.assertEqual(20, len(environment.object_df))
        self.assertEqual(1, environment.level_number)

    def test_possible_actions(self):

        environment = Environment.from_pilot_config(TEST_PILOT_GAME_CONFIG)
        all_actions = environment.possible_actions

        # 20 objects in 4 clusters of 5 each --> 31 possible combinations per cluster --> 124 total.
        self.assertEqual(124, len(all_actions))

    def test_max_score(self):

        environment = Environment.from_pilot_config(TEST_PILOT_GAME_CONFIG)
        max_score = TEST_PILOT_GAME_CONFIG["game_metadata"]["max_cluster_value"]

        # We should recover the maximum possible score (config) from possible actions (max score property)
        self.assertEqual(max_score, environment.max_reward)

    def test_clusters(self):
        """Silly test-- just run the function and validate it returns not-garbage."""

        environment = Environment.from_pilot_config(TEST_PILOT_GAME_CONFIG)

        for c in [0, 1, 2, 3]:
            objects = environment.get_cluster(c)
            self.assertEqual(5, len(objects))

    def test_shape_magnitude_from_config(self):

        level_config = TEST_SHAPE_MAG_FULL_GAME["config"]
        value_mask_config = {"shape_config": "^_s_o", "color_config": "m_c_y"}

        environment = Environment.from_shape_magnitude_config(level_config, value_mask_config)

        expected_columns = ['y', 'x', 'cluster_id', 'reward', 'yellow', 'triangle', 'yellow|triangle', 'pink',
                            'square', 'pink|square', 'blue', 'circle', 'blue|circle', 'yellow|circle', 'pink|circle',
                            'pink|triangle', 'yellow|square', 'blue|square', 'blue|triangle']

        self.assertSetEqual(set(expected_columns), set(list(environment.object_df.columns.values)))
        self.assertEqual(20, len(environment.object_df))
        self.assertEqual(1, environment.level_number)


if __name__ == '__main__':
    unittest.main()





